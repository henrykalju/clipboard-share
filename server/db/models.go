// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ClipboardType string

const (
	ClipboardTypeX11     ClipboardType = "X11"
	ClipboardTypeWINDOWS ClipboardType = "WINDOWS"
)

func (e *ClipboardType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ClipboardType(s)
	case string:
		*e = ClipboardType(s)
	default:
		return fmt.Errorf("unsupported scan type for ClipboardType: %T", src)
	}
	return nil
}

type NullClipboardType struct {
	ClipboardType ClipboardType
	Valid         bool // Valid is true if ClipboardType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullClipboardType) Scan(value interface{}) error {
	if value == nil {
		ns.ClipboardType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ClipboardType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullClipboardType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ClipboardType), nil
}

type Datum struct {
	ID     int32
	ItemID int32
	Format string
	Data   []byte
}

type Item struct {
	ID        int32
	PersonID  int32
	Type      NullClipboardType
	Content   string
	CreatedAt pgtype.Timestamp
}

type Person struct {
	ID   int32
	Name string
}
