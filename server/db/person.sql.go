// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: person.sql

package db

import (
	"context"
)

const getPerson = `-- name: GetPerson :one
select
    id, username, password
from person
where username = $1
`

func (q *Queries) GetPerson(ctx context.Context, username string) (Person, error) {
	row := q.db.QueryRow(ctx, getPerson, username)
	var i Person
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}

const getPersonByID = `-- name: GetPersonByID :one
select
    id, username, password
from person
where id = $1
`

func (q *Queries) GetPersonByID(ctx context.Context, id int32) (Person, error) {
	row := q.db.QueryRow(ctx, getPersonByID, id)
	var i Person
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}

const insertPerson = `-- name: InsertPerson :exec
insert into person (
    username,
    password
) values (
    $1,
    $2
) returning id, username, password
`

type InsertPersonParams struct {
	Username string
	Password string
}

func (q *Queries) InsertPerson(ctx context.Context, arg InsertPersonParams) error {
	_, err := q.db.Exec(ctx, insertPerson, arg.Username, arg.Password)
	return err
}

const updatePassword = `-- name: UpdatePassword :exec
update person set
password = $2
where username = $1
`

type UpdatePasswordParams struct {
	Username string
	Password string
}

func (q *Queries) UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error {
	_, err := q.db.Exec(ctx, updatePassword, arg.Username, arg.Password)
	return err
}
